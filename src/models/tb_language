from sqlalchemy import Column, String
from sqlalchemy.dialects.postgresql import UUID

from src.common.functions import validate_param
from src.config import ApplicationConfig
from src.internal_services.app_ulid import AppUlid

from .base import BaseModel

config_app = ApplicationConfig()


class Language(BaseModel):
    __tablename__ = "language"
    language_id = Column(UUID(as_uuid=True), primary_key=True, default=AppUlid.ulid_to_uuid)
    value = Column(String(35), nullable=False)
    code = Column(String(5), nullable=False)
    __table_args__ = (
        {"schema": config_app.DB_SCHEMA},
    )

    @property
    def __language_id(self):
        return self.language_id

    @property
    def __value(self):
        return self.value

    @__value.setter
    def __value(self, value):
        validate_param("value", value, "str")
        self.value = value

    @property
    def __code(self):
        return self.code

    @__code.setter
    def __code(self, value):
        validate_param("code", value, "str")
        self.code = value

    def __set_params(self, params):
        self.__value = params.get("value")
        self.__code = params.get("code")

    def add(self, params):
        self.__enabled = True
        self.__set_params(params)

    def update(self, params):
        self.__set_params(params)

    def get(self):
        return {
            "language_id": str(self.__language_id),
            "value": self.__value,
            "code": self.__code
        }
